#!/usr/bin/env bash
set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
ROOT_DIR="$(cd "$SCRIPT_DIR/.." && pwd)"
PLUGINS_DIR="$ROOT_DIR/plugins"
PLUGINS_FILE="$PLUGINS_DIR/plugins.go"

source ${SCRIPT_DIR}/utils.sh

##
# Log message only if verbose mode is enabled
##
function log() {
  [[ "$OPT_VERBOSE" ]] && echoerr $@
}

##
# Print Usage
##
function usage() {
  color yellow "Usage:"
  echoerr "  ${BASH_SOURCE[0]} [OPTIONS]"
  echoerr ""

  color yellow "Options:"

  color green "  -c, --clear"
  echoerr -e "\tRemove bundle"

  color green "  -v, --verbose"
  echoerr -e "\tVerbose mode"

  color green "  -h, --help"
  echoerr -e "\tShow this help"

  echoerr ""
  exit $1;
}

OPT_BUNDLE=1
OPT_CLEAR=""
OPT_VERBOSE=""

##
# Parse arguments
##
while [[ $# > 0 ]]
do
  case "$1" in
    -c|--clear) OPT_CLEAR=1 OPT_BUNDLE="" ;;
    -v|--verbose) OPT_VERBOSE=1 ;;
	  -h|--help) usage ;;
  esac
  shift
done

##
# Create Bundle
##
if [[ "$OPT_BUNDLE" ]] ; then
  log "Create plugin bundle in $PLUGINS_FILE"
  pushd "$PLUGINS_DIR" > /dev/null
    cat > "$PLUGINS_FILE" << EOF
// Code generated by bundle_plugins. DO NOT EDIT.

package plugins

var PluginsBundle = map[string]string{
EOF

    for file in $(find "$PLUGINS_DIR" -name "*.yml");
    do
      filename=$(basename -- "$file")
      filename="${filename%.*}"
      content=$(cat "$file")
      printf "    \"$filename\": \`$content\`,\n" >> "$PLUGINS_FILE"
    done

    printf "}\n" >> "$PLUGINS_FILE"
  popd > /dev/null
fi

##
# Remove Bundle
##
if [[ ! -z "$OPT_CLEAR" ]] ; then
  log "Remove plugin bundle in $PLUGINS_FILE"
  pushd "$PLUGINS_DIR" > /dev/null
    rm "$PLUGINS_FILE"
  popd > /dev/null
fi
